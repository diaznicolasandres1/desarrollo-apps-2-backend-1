name: Build & Deploy (Backend)

on:
  push:
    tags:
      - 'v*'
    branches:
      - '**'

jobs:
  # 📋 Job 1: Información del release
  release-info:
    name: 📋 Release Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ github.ref_name }}
      commit: ${{ github.sha }}
      actor: ${{ github.actor }}
    steps:
      - name: Show release info
        run: |
          echo "🚀 Deployando versión: ${{ github.ref_name }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Autor: ${{ github.actor }}"

  # 🏗️ Job 2: Build de la aplicación (verifica que compile)
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: release-info
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Upload dist (opcional)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/
          retention-days: 1

  # 🧪 Job 3: Tests
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: release-info
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies for tests
        run: npm ci

      - name: Run tests
        run: npm test

  # 🚀 Job 4: Deploy a CapRover (solo en tags v*)
  deploy:
    name: 🚀 Deploy to CapRover
    runs-on: ubuntu-latest
    needs: [build, test]
    environment: production
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show files
        run: ls -la

      - name: Create deploy.tar for CapRover
        run: |
          # Crear el paquete de despliegue desde el repo usando el Dockerfile existente
          # Excluir archivos innecesarios para la build
          tar \
            --exclude='./.git' \
            --exclude='./node_modules' \
            --exclude='./coverage' \
            --exclude='./.github' \
            --exclude='./dist' \
            -cf deploy.tar .

          echo "📦 Contenido del deploy.tar (primeros 100):"
          tar -tvf deploy.tar | head -n 100
          echo "📏 Tamaño del tar:"
          ls -lh deploy.tar

      - name: Verify deploy.tar position
        run: ls -la

      - name: Install CapRover CLI
        run: npm install -g caprover

      - name: Deploy to CapRover
        env:
          CAPROVER_SERVER: ${{ secrets.CAPROVER_SERVER }}
          CAPROVER_APP_TOKEN: ${{ secrets.CAPROVER_APP_TOKEN }}
          APP_NAME: ${{ secrets.APP_NAME }}
        run: |
          caprover deploy \
            -u "$CAPROVER_SERVER" \
            -a "$APP_NAME" \
            --appToken "$CAPROVER_APP_TOKEN" \
            -t ./deploy.tar
